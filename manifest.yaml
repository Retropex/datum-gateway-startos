# Example written in yaml (toml and json are also acceptable)

# The package identifier used by the OS. This must be unique amongst all other known packages
id: datumtwo
 # A human readable service title
title: "Datum Gateway (second instance)"
# Service version - accepts up to four digits, where the last confirms to revisions necessary for StartOS - see documentation: https://github.com/Start9Labs/emver-rs. This value will change with each release of the service. 
version: 0.3.1
# Release notes for the update - can be a string, paragraph or URL
release-notes: |
  - Release notes: https://github.com/OCEAN-xyz/datum_gateway/releases/tag/v0.3.1beta
license: MIT
wrapper-repo: "https://github.com/ocean-xyz/datum-gateway-startos"
upstream-repo: "https://github.com/ocean-xyz/datum-gateway"
support-site: "https://ocean.xyz"
marketing-site: "https://ocean.xyz"
build: ["make"]
description:
  short: Make block templates and issue work to your miners
  long: |
    Datum-gateway allows miners to use their Bitcoin node to generate their own templates and issue work to their miners while still sharing rewards on a pool or solo mining.
assets:
  license: LICENSE
  icon: icon.png
  instructions: INSTRUCTIONS.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
  gpu-acceleration: false
hardware-requirements:
  arch:
    - x86_64
    - aarch64
health-checks:
  dashboard:
    name: Datum Dashboard
    success-message: The Datum-gateway dashboard is accessible.
    type: docker
    image: main
    system: false
    entrypoint: check-dashboard.sh
    args: []
    mounts: {}
    io-format: json
    inject: true
  stratum:
    name: Stratum Interface
    success-message: Stratum port is available. Ensure you're forwarding with simpleproxy and then connect your miner(s).
    type: docker
    image: main
    system: false
    entrypoint: check-stratum.sh
    args: []
    mounts: {}
    io-format: json
    inject: true
  bitcoin:
    name: Bitcoin RPC
    success-message: Bitcoin RPC available.
    type: docker
    image: main
    system: false
    entrypoint: check-bitcoin.sh
    args: []
    mounts: {}
    io-format: json
    inject: true
  get:
    type: script
  set:
    type: script
properties: ~
volumes:
  main:
    type: data
interfaces:
  main:
    name: Web UI
    description: Dashboard for Datum-gateway
    tor-config:
      port-mapping:
        80: "17152"
    lan-config:
      443:
        ssl: true
        internal: 17152
    ui: true
    protocols:
      - tcp
      - http
  mining:
    name: Mining Interface
    description: Point your ASICs here!
    lan-config:
      33335:
        ssl: false
        internal: 33335
    ui: false
    protocols:
      - tcp
      - stratum
      - http
dependencies:
  bitcoind:
    version: ">=0.21.1.2 <29.0.0"
    requirement:
      type: "required"
    description: Used to generate block templates
    config:
      check:
        type: script
      auto-configure:
        type: script
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
